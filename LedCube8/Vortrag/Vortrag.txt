Led Cube 8*8*8


-	Idee
-	Planung
	| 	Komponenten
	|	Schema
	|	Funktionsprinzip
	|	IC-Anordnung
	
	
	
	
	
-	Aufbau/Umsetzung
	|	Aufbau
	|	Led's löten
	|	zusammenbau
    |	
    |	
    |	


-	Software
	|	Ansteuerung
    |	Versionen
    |	Funktionen
    |	
	
-	Technische Daten
	|	Max Takt
	|	Max Strom
	|	Max Speicher menge
	
	
	---------------------------------------------------------
	
	
	
	-	Idee
		
		Auf die Idee gekommen bin ich schon vor meiner Lehre. 
		Im ersten Lehrjahr habe ich auch schon ein Led Würfel gebaut
		der hat allerdings nur eine Kantenlänge von 3 Led's.
		
		Mit der Zeit war das mögliche an Animationen also ausgeschöpft 
		und der Würfel wurde uninteressant.
		So beschloss ich einen neuen und grösseren zu bauen der mir viel 
		mehr Möglichkeiten an Animationen bietet.
		
	-	Planung
		-	Komponenten
			
			Ich wollte, das die Led's eine blaue Farbe haben sollten 
			und der Preis war natürlich auch eine Bedingung.
			Also habe ich mich für blaue SMD Led's entschieden die mit 
			einem Stückpreis bei ca 0.20Fr. liegen. Man muss bedenken das man 
			eine grosse Anzahl von Led's kaufen muss, um einen so grossen Led Würfel
			bauen zu können. Insgesamt habe ich 520 Led's bestellt um 8 übrig zu haben 
			falls Probleme mit den einen Led's auftreten oder ich einige verliere.
			
			Zur Ansteuerung habe ich den Arduino Uno verwendet.
			
		-	Schema

			Ich habe mich grösstenteils vom Internet inspirieren lassen
			und Informationen von den Leuten gesammelt die das selbe
			schon einmal gemacht haben.
			Das Schema habe ich also vom Internet bezogen und einige Änderungen 
			vorgenommen. In dem Original Schema wurden alle Pins vom Arduino
			genutzt, die man nutzen konnte. Ich wollte unbedingt 4 Pins frei lassen,
			das sind die Pins die man für eine Kommunikation zwischen anderen Geräten
			zu gewährleisten.
			
		-	Funktionsprinzip
		
			-	Die Hardware ist so gebaut das im ersten Schritt ein Byte vom Arduino bei den Pins 2-9 
				auf den entsprechenden Wert gesetzt wird.
			
			-	Direkt anschliessend wird bei den ArduinoPins 10-13 eine 4bit Adresse an ein BCD-IC
				gesendet, dieses gibt einen kurzes Signal zu dem adressierten D-Flip-Flop, das wiederum
				setzt die eingehenden Signale von dem ersten Schritt.
				Das geschieht 8-mal bis alle 8 Ic's gesetzt sind.
			
			-	Sobald alle Flip-Flop IC's gesetzt wurden, wird die erste Ebene mit hilfe der Arduino pins A0-A3
				mit einer 4 bit Adresse gesetzt und wider ausgeschaltet.
				Danach müssen die IC's neu gesetzt werden bevor man die nächste ebene ansteuern kann.
				
			
		-	IC-Anordnung

			-	Da ich nur ein kleinen Print zur Verfügung hatte, muste ich meinen Platz gut einteilen.
				Daher habe ich mich für einen sehr konpakten Print entschieden.
				So findet sogar der Led-Würfel Platz.
				
			
	-	Aufbau/Umsetzung
		-	Aufbau
			-	Der Würfel ist so aufgebaut das jeder Plus Pol der Led's auf einem Leiter senkrecht gelötet wird und der
				Minus Pol waagerecht gelötet wird. Dadurch benötigt man um alle Led's anzusteuern nicht direkt 512 Pins sondern nur 72
				da ich aber auch nicht 72 Pins habe musste ich das ganze noch mehr vereinfachen indem ich 8 Flip-Flop Ic's und 2 
				BCD IC's verwendet habe so brauche ich für den ganzen Würfel nur noch 16 Pins. 8 für den zustand von 8 Led's, 4 für die 
				Adressierung der Flip-Flip Ic's und 4 für die Adressierung von 8 Ebenen.
				Die Ebenen werden mit einem Transistor auf GND gesetzt.
			
		-	Led's löten
			-	Es war sehr schwer die 512 Led's zu löten da sie sehr klein sind und 
				zudem sehr wenig Lot verwendet werden darf.
				
			-	Um die Led's zu löten muste ich einen Draht abisolieren und anschliessend schleifen,
				nach dem schleifen wurde der Draht gestreckt um ihn gerade zu bringen und zum Schluss wurde er in
				Stücke geschnitten.
			
		-	zusammenbau		
			
			-	Bevor man eine Led löten konnte musste ich ein Drähtchen verzinnen damit die led's besser zu löten waren.
				Danach konnte man die Led's mit einer Pinzette an den Leiter löten.
				
			-	Ich musste 64 solche Drähte mit je 8 Led's daran löten.
			
			-	Nach 8 solchen Stangen wurde daraus eine Fläche gelötet.
				Mit 8 solcher Flächen wurde am Schluss der Würfel zusammengebaut.
			
	-	Software
	
		-	Ansteuerung
			-	Jeder ausgang wird exakt gleichzeitig gesetz. 
				Das spart nicht nur zeit sondern auch Fehler der darstellung.
			
		-	Versionen
			-	
			
		-	Funktionen
			-	Um Speicher zu sparen gibt es eine Menge Funktionen die einem das Animieren erleichtern.
				Die wichtigsten sind:
				-	light();
				-	time();
				-	draw();
				-	drawCube();
				-	writeLayer();
				
				Alle anderen Funktionen sind nicht so wichtig aber sehr cool um animationen 
				bewegen zu lassen und so weiter.
				
			
			
			
	-	Technische Daten
		
		- 	Max Takt
			-	Ein Flip-Flop IC wird pro sec. 125 mal neu gesetzt.
			-	Eine Ebene wird pro sec. 12512 mal angesteuert.
			
		-	Max Strom
			-	Ein Maximaler Strom bei einer ganzen Ebene liegt bei 500mA.
			
		-	Max Speicher menge
			-	Der Arduino Uno hat einen Speicher von 32KB.
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		